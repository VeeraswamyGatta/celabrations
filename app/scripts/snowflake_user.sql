-- 1. Create a role for read-only access
CREATE ROLE IF NOT EXISTS READ_ONLY_ROLE;

-- 2. Grant usage & read-only privileges on specific databases/schemas
GRANT USAGE ON DATABASE GANESH_DB TO ROLE READ_ONLY_ROLE;
GRANT USAGE ON SCHEMA GANESH_DB.GANESH_SCHEMA TO ROLE READ_ONLY_ROLE;
GRANT SELECT ON ALL TABLES IN SCHEMA GANESH_DB.GANESH_SCHEMA TO ROLE READ_ONLY_ROLE;

-- (Optional) Future grants so new tables are also accessible
GRANT SELECT ON FUTURE TABLES IN SCHEMA GANESH_DB.GANESH_SCHEMA TO ROLE READ_ONLY_ROLE;

-- 3. Create the user
CREATE USER ganesh_user
  PASSWORD = '***'
  DEFAULT_ROLE = READ_ONLY_ROLE
  MUST_CHANGE_PASSWORD = TRUE;   -- user will reset on first login

-- 4. Assign the role to the user
GRANT ROLE READ_ONLY_ROLE TO USER ganesh_user;

-- 5. Also, give the role some basic access
GRANT ROLE READ_ONLY_ROLE TO ROLE SYSADMIN;   -- So SYSADMIN can manage it if needed


CREATE OR REPLACE MASKING POLICY mask_email AS (val STRING)
RETURNS STRING ->
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','SYSADMIN','FULL_ACCESS_ROLE') THEN val
    ELSE CONCAT(LEFT(val, 4), '***@', SPLIT_PART(val, '@', 2))
  END;


  CREATE OR REPLACE MASKING POLICY mask_phone AS (val STRING)
RETURNS STRING ->
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','SYSADMIN','FULL_ACCESS_ROLE') THEN val
    ELSE CONCAT(LEFT(val, 4), 'XXXX', RIGHT(val, 2))
  END;


  ALTER TABLE GANESH_DB.GANESH_SCHEMA.SPONSORS
  MODIFY COLUMN email
  SET MASKING POLICY mask_email;

  ALTER TABLE GANESH_DB.GANESH_SCHEMA.SPONSORS
  MODIFY COLUMN mobile
  SET MASKING POLICY mask_phone;

  
  ALTER TABLE GANESH_DB.GANESH_SCHEMA.notification_emails
  MODIFY COLUMN email
  SET MASKING POLICY mask_email;

  ALTER TABLE GANESH_DB.GANESH_SCHEMA.TRANSFERS
  MODIFY COLUMN phone
  SET MASKING POLICY mask_phone;

CREATE OR REPLACE MASKING POLICY mask_name AS (val STRING)
RETURNS STRING ->
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','SYSADMIN','FULL_ACCESS_ROLE') THEN val
    ELSE CONCAT(LEFT(val, 4), REPEAT('X', GREATEST(LENGTH(val) - 4, 0)))
  END;

ALTER TABLE GANESH_DB.GANESH_SCHEMA.EXPENSES
MODIFY COLUMN SPENT_BY
SET MASKING POLICY mask_name;

ALTER TABLE GANESH_DB.GANESH_SCHEMA.SPONSORS
MODIFY COLUMN NAME
SET MASKING POLICY mask_name;

ALTER TABLE GANESH_DB.GANESH_SCHEMA.TRANSFERS
MODIFY COLUMN NAME
SET MASKING POLICY mask_name;

ALTER TABLE GANESH_DB.GANESH_SCHEMA.PRASAD_SEVA
MODIFY COLUMN NAMES
SET MASKING POLICY mask_name;

ALTER TABLE GANESH_DB.GANESH_SCHEMA.PAYMENT_DETAILS
MODIFY COLUMN NAME
SET MASKING POLICY mask_name;